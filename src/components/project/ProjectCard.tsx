'use client';\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from '@/components/ui/Card';\nimport { Badge } from '@/components/ui/Badge';\nimport { Button } from '@/components/ui/Button';\nimport { Project } from '@/types/project';\nimport { ExternalLink, Github, Calendar, User, Zap } from 'lucide-react';\n\ninterface ProjectCardProps {\n  project: Project;\n  index?: number;\n}\n\nconst ProjectCard = ({ project, index = 0 }: ProjectCardProps) => {\n  const getStatusColor = (status: Project['status']) => {\n    switch (status) {\n      case 'production':\n        return 'success';\n      case 'in-progress':\n        return 'warning';\n      case 'completed':\n        return 'secondary';\n      default:\n        return 'default';\n    }\n  };\n\n  const getStatusText = (status: Project['status']) => {\n    switch (status) {\n      case 'production':\n        return '운영 중';\n      case 'in-progress':\n        return '진행 중';\n      case 'completed':\n        return '완료';\n      default:\n        return status;\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.6, delay: index * 0.1 }}\n      whileHover={{ y: -8 }}\n      className=\"group h-full\"\n    >\n      <Card className=\"h-full overflow-hidden transition-all duration-300 hover:shadow-xl border-0 bg-white/80 backdrop-blur-sm dark:bg-gray-900/80\">\n        {/* Project Image */}\n        <div className=\"relative h-48 overflow-hidden\">\n          <div className=\"absolute inset-0 bg-gradient-to-br from-blue-500/20 to-cyan-500/20\" />\n          <div className=\"absolute top-4 right-4 z-10\">\n            <Badge variant={getStatusColor(project.status)}>\n              {getStatusText(project.status)}\n            </Badge>\n          </div>\n          \n          {/* Placeholder for project image */}\n          <div className=\"w-full h-full bg-gradient-to-br from-blue-100 to-cyan-100 dark:from-blue-900/30 dark:to-cyan-900/30 flex items-center justify-center\">\n            <div className=\"text-center space-y-2\">\n              <Zap className=\"h-12 w-12 text-blue-500 mx-auto\" />\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                {project.titleKo}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <CardHeader className=\"pb-4\">\n          <div className=\"flex items-start justify-between\">\n            <div className=\"space-y-1 flex-1\">\n              <CardTitle className=\"text-xl group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors\">\n                {project.titleKo}\n              </CardTitle>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400 font-medium\">\n                {project.title}\n              </p>\n            </div>\n          </div>\n          \n          {/* Project Meta */}\n          <div className=\"flex items-center gap-4 text-xs text-gray-500 dark:text-gray-400\">\n            <div className=\"flex items-center gap-1\">\n              <Calendar className=\"h-3 w-3\" />\n              {project.period}\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <User className=\"h-3 w-3\" />\n              {project.role}\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardContent className=\"space-y-4\">\n          {/* Description */}\n          <p className=\"text-sm text-gray-600 dark:text-gray-300 line-clamp-3\">\n            {project.overview}\n          </p>\n\n          {/* Key Metrics */}\n          {project.metrics && (\n            <div className=\"grid grid-cols-2 gap-2\">\n              {Object.entries(project.metrics).map(([key, value]) => (\n                <div key={key} className=\"text-center p-2 bg-gray-50 dark:bg-gray-800 rounded-md\">\n                  <div className=\"text-xs text-gray-500 dark:text-gray-400 capitalize\">\n                    {key === 'users' ? '사용자' : \n                     key === 'uptime' ? '업타임' : \n                     key === 'performance' ? '성능' : \n                     key === 'accuracy' ? '정확도' :\n                     key === 'scale' ? '규모' : key}\n                  </div>\n                  <div className=\"text-sm font-semibold text-blue-600 dark:text-blue-400\">\n                    {value}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n\n          {/* Tech Stack Preview */}\n          <div className=\"space-y-2\">\n            <p className=\"text-xs font-medium text-gray-500 dark:text-gray-400\">주요 기술스택</p>\n            <div className=\"flex flex-wrap gap-1\">\n              {[\n                ...(project.techStack.backend?.slice(0, 2) || []),\n                ...(project.techStack.frontend?.slice(0, 2) || []),\n                ...(project.techStack.ml?.slice(0, 2) || [])\n              ].slice(0, 4).map((tech) => (\n                <Badge key={tech} variant=\"outline\" className=\"text-xs\">\n                  {tech}\n                </Badge>\n              ))}\n              {Object.values(project.techStack).flat().length > 4 && (\n                <Badge variant=\"secondary\" className=\"text-xs\">\n                  +{Object.values(project.techStack).flat().length - 4}\n                </Badge>\n              )}\n            </div>\n          </div>\n        </CardContent>\n\n        <CardFooter className=\"flex gap-2\">\n          <Button size=\"sm\" href={`/projects/${project.id}`} className=\"flex-1\">\n            자세히 보기\n          </Button>\n          \n          {project.links.github && (\n            <Button size=\"sm\" variant=\"outline\" href={project.links.github}>\n              <Github className=\"h-4 w-4\" />\n            </Button>\n          )}\n          \n          {project.links.live && (\n            <Button size=\"sm\" variant=\"outline\" href={project.links.live}>\n              <ExternalLink className=\"h-4 w-4\" />\n            </Button>\n          )}\n        </CardFooter>\n      </Card>\n    </motion.div>\n  );\n};\n\nexport default ProjectCard;