'use client';\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { Button } from '@/components/ui/Button';\nimport { Badge } from '@/components/ui/Badge';\nimport { Download, ExternalLink, Github } from 'lucide-react';\n\nconst Hero = () => {\n  const metrics = [\n    { label: '운영 중인 서비스', value: '2개', color: 'success' as const },\n    { label: '서비스 사용자', value: '100K+', color: 'default' as const },\n    { label: '시스템 업타임', value: '99.9%', color: 'warning' as const },\n    { label: 'ML 정확도', value: '90%+', color: 'secondary' as const }\n  ];\n\n  const typewriterWords = [\n    'Full-Stack Developer',\n    'ML Engineer', \n    'DevOps Specialist',\n    '풀스택 개발자',\n    'ML 엔지니어',\n    'DevOps 전문가'\n  ];\n\n  return (\n    <section className=\"min-h-screen flex items-center justify-center relative overflow-hidden gradient-bg\">\n      {/* Background Elements */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        <div className=\"absolute -top-40 -right-40 w-80 h-80 bg-blue-500/10 rounded-full blur-3xl\" />\n        <div className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-cyan-500/10 rounded-full blur-3xl\" />\n      </div>\n\n      <div className=\"container-width section-padding relative z-10\">\n        <div className=\"text-center space-y-8\">\n          {/* Greeting */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            className=\"space-y-2\"\n          >\n            <p className=\"text-lg text-gray-600 dark:text-gray-400\">\n              안녕하세요! 👋\n            </p>\n            <h1 className=\"text-5xl md:text-7xl font-bold\">\n              <span className=\"gradient-text\">하경한</span>\n              <br />\n              <span className=\"text-gray-900 dark:text-gray-100\">Kyunghan Ha</span>\n            </h1>\n          </motion.div>\n\n          {/* Typewriter Effect */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n            className=\"h-16 flex items-center justify-center\"\n          >\n            <TypewriterEffect words={typewriterWords} />\n          </motion.div>\n\n          {/* Description */}\n          <motion.p\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.4 }}\n            className=\"text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto leading-relaxed\"\n          >\n            풀스택 개발부터 머신러닝까지 다양한 기술 스택을 활용한 실무 프로젝트 경험을 보유한 개발자입니다.\n            <br />\n            현재 <strong className=\"text-blue-600 dark:text-blue-400\">2개의 프로덕션 서비스</strong>를 운영하며,\n            <strong className=\"text-green-600 dark:text-green-400\"> 10만+ 사용자</strong>에게 서비스를 제공하고 있습니다.\n          </motion.p>\n\n          {/* Metrics */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.6 }}\n            className=\"flex flex-wrap justify-center gap-4\"\n          >\n            {metrics.map((metric, index) => (\n              <motion.div\n                key={metric.label}\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.4, delay: 0.8 + index * 0.1 }}\n                className=\"glass rounded-lg p-4 text-center min-w-[120px]\"\n              >\n                <Badge variant={metric.color} className=\"mb-2\">\n                  {metric.value}\n                </Badge>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  {metric.label}\n                </p>\n              </motion.div>\n            ))}\n          </motion.div>\n\n          {/* CTA Buttons */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 1.0 }}\n            className=\"flex flex-wrap justify-center gap-4\"\n          >\n            <Button size=\"lg\" href=\"/projects\" className=\"group\">\n              프로젝트 보기\n              <ExternalLink className=\"ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform\" />\n            </Button>\n            <Button variant=\"outline\" size=\"lg\" href=\"/resume.pdf\" className=\"group\">\n              이력서 다운로드\n              <Download className=\"ml-2 h-4 w-4 group-hover:translate-y-1 transition-transform\" />\n            </Button>\n            <Button variant=\"ghost\" size=\"lg\" href=\"https://github.com/khanz0613\" className=\"group\">\n              <Github className=\"mr-2 h-4 w-4\" />\n              GitHub\n            </Button>\n          </motion.div>\n\n          {/* Scroll Indicator */}\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 1, delay: 1.5 }}\n            className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2\"\n          >\n            <motion.div\n              animate={{ y: [0, 10, 0] }}\n              transition={{ duration: 2, repeat: Infinity }}\n              className=\"w-6 h-10 border-2 border-gray-400 dark:border-gray-600 rounded-full flex justify-center\"\n            >\n              <motion.div\n                animate={{ y: [0, 12, 0] }}\n                transition={{ duration: 2, repeat: Infinity }}\n                className=\"w-1 h-3 bg-gray-400 dark:bg-gray-600 rounded-full mt-2\"\n              />\n            </motion.div>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\n// Typewriter Effect Component\nconst TypewriterEffect = ({ words }: { words: string[] }) => {\n  const [currentWordIndex, setCurrentWordIndex] = React.useState(0);\n  const [currentText, setCurrentText] = React.useState('');\n  const [isDeleting, setIsDeleting] = React.useState(false);\n\n  React.useEffect(() => {\n    const currentWord = words[currentWordIndex];\n    const timeout = setTimeout(() => {\n      if (!isDeleting) {\n        if (currentText !== currentWord) {\n          setCurrentText(currentWord.slice(0, currentText.length + 1));\n        } else {\n          setTimeout(() => setIsDeleting(true), 2000);\n        }\n      } else {\n        if (currentText !== '') {\n          setCurrentText(currentText.slice(0, -1));\n        } else {\n          setIsDeleting(false);\n          setCurrentWordIndex((prev) => (prev + 1) % words.length);\n        }\n      }\n    }, isDeleting ? 50 : 100);\n\n    return () => clearTimeout(timeout);\n  }, [currentText, currentWordIndex, isDeleting, words]);\n\n  return (\n    <div className=\"text-2xl md:text-3xl font-semibold text-gray-700 dark:text-gray-300\">\n      {currentText}\n      <span className=\"animate-pulse\">|</span>\n    </div>\n  );\n};\n\nexport default Hero;